SELECT *FROM person WHERE gender='Male'; позволит выбрать всех пользователей у которых пол мужской
SELECT *FROM person WHERE gender='Male' AND country = 'poland'; выберет всех мужчин из города poland
SELECT *FROM person WHERE gender='Male' AND (country = 'poland' OR country='China'); - теперь выберет или poland или china
SELECT *FROM person WHERE gender='Male' AND (country = 'poland' OR country='China') AND lastname="Smirnov"; - теперь выберет по фамилии
IN - принимает массив значений 
SELECT * FROM person country IN (BRAZIL,FRANCES,CHINA) - выведит результат сразу по трем странам (не нужно указывать OR)
SELECT * FROM PERSON WHERE berthDAY BEETWIN DATE '1992-11-21' AND '1999-11-21'; - выберет все результаты между данными 
SELECT * FROM person WHERE mail LIKE ='%.com'; - выберет из email все которые заканчиваются .com (%) - означает выбрать все перед .com
SELECT * FROM person WHERE mail LIKE ='_____.com'; - выберет у кого пять символов перед точкой 
ILIKE - игнорирует регистр 
SELECT country,COUNT() FROM person GROUP BY country - ВЫБЕРЕТ СТРАННЫ и число людей в ней 

UPDATE person SET carid = 2 WHERE id = 1; - присваевает машину по id к человеку
Итак чтобы соеденить две таблицы на понадобится A + B = C 
SELECT * FROM person 
JOIN car ON(и так далее) person.carid = car.id; - таким способом мы соеденям две таблицы 
LEFT JOIN - соединяет две таблицы при этом сохраняя данные которые не относятся к одной из таблиц 
\x - расшириный вывод информации 
чтобы скопировать базу данных на нужно воспользоваться командо copy 
\copy (SELECT * FROM person) TO "/user/desktop/results.csv" DELIMITER '.' ''CSV HEADER ;


Node.JS и PosgreSQL 
www.node-posgreSQL.com
чтобы установить базу данных в node js нужно установить библиотеку npm install pg
Подключаем при помощи 
const {pool} = require("pg")
const (Client) = require("pg")
1.Test.js 
const {pool} = require("pg")
const pool = new pool({
   host:"127.0.0.1",
   port:5432,
   database:"users",
   user:"Aleksandr",
   password:1234,
})
const Field = ["sdkkds","sdfsdf","sdffsd","sdfsdf"];
const sql = `SELECT ${Field} FROM person;" 
pool.query(sql,['ALeksandr'],(err,res) => {
   if (err) {
      throw err;
   }
   console.dir({res})
   console.table(res.fields)
   console.table(res.rows)
   pool.end() - заканчивает работу подключения к базе данных 
})
2 Async.js 
const {pool} = require("pg")
const pool = new pool({
   host:"127.0.0.1",
   port:5432,
   database:"users",
   user:"Aleksandr",
   password:1234,
})

(Async() => {
const Field = ["sdkkds","sdfsdf","sdffsd","sdfsdf"];
const sql = `SELECT ${Field} FROM person;" 
const {rows} = await.pool.query(sql,["Aleksandr"]);
   console.table(rows)
   pool.end()
})
2 Promise.js
const {pool} = require("pg")
const pool = new pool({
   host:"127.0.0.1",
   port:5432,
   database:"users",
   user:"Aleksandr",
   password:1234,
})

(Async() => {
const Field = ["sdkkds","sdfsdf","sdffsd","sdfsdf"].join(",");
const sql = `SELECT ${Field} FROM person;" 
pool.query(sql,["Aleksandr"]).then(
   res => const {rows} = res
   console.table(rows)
).catch( err => console.log(err)).
finaly( () => {
   pool.end()
}
)
const {rows} = await.pool.query(sql,["Aleksandr"]);
   console.table(rows)
   pool.end()
})